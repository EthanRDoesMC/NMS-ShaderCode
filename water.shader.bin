[[FX]]

// Samplers

sampler gReflectionMap = sampler_state
{
    TexUnit = 7;
};

sampler gDisplacementMap = sampler_state
{
    Filter  = Bilinear;
    Address = Clamp;
    TexUnit = 9;
};

sampler gNormalMap = sampler_state
{
    Filter = Trilinear;
    MaxAnisotropy = 0;
    TexUnit = 2;
};

sampler gFoamNormalMap = sampler_state
{
    Filter = Trilinear;
    MaxAnisotropy = 0;
    TexUnit = 8;
};

sampler gFresnelMap = sampler_state
{
    Filter = Bilinear;
    MaxAnisotropy = 0;
    TexUnit = 10;
};

sampler gFoamMap = sampler_state
{
    Filter = Trilinear;
    MaxAnisotropy = 0;
    TexUnit = 1;
};

sampler gShadowMap = sampler_state
{
    TexUnit = 15;
};

sampler gCloudShadowMap = sampler_state
{
    TexUnit = 14;
};

sampler gFadeNoiseMap = sampler_state
{
    DefaultTexture = SHADER/BLUENOISE.DDS;
    TexUnit = 13;
};

sampler gBuffer1Map = sampler_state
{
    Address = Clamp;
    TexUnit = 4;
};

sampler gBuffer2Map = sampler_state
{
    Address = Clamp;
    TexUnit = 5;
};

sampler gBufferMap = sampler_state
{
    Address = Clamp;
    TexUnit = 6;
};

sampler gNoiseMap = sampler_state
{
    DefaultTexture = SHADER/NOISEINVERT.DDS;
    TexUnit = 12;
    Address = Wrap;
};

sampler gFoamHeightMap = sampler_state
{
    Filter = Bilinear;
    MaxAnisotropy = 0;
    TexUnit = 3;
};

sampler gRWDepthLinear = sampler_state
{
    ImgUnit = 0;
};

// Uniforms

// Water
float4 gWaveScaleVec4                    = {0.0, 0.0, 0.0, 0.0};
float4 gWaveSpeedVec4                    = {0.0, 0.0, 0.0, 0.0};
float4 gWindDirectionVec4                = {0.0, 0.0, 0.0, 0.0};
float4 gWaterSurfaceParamsVec4           = {0.0, 0.0, 0.0, 0.0};
float4 gFresnelParamsVec4                = {0.0, 0.0, 0.0, 0.0};
float4 gFoamParamsVec4                   = {0.0, 0.0, 0.0, 0.0};
float4 gFoamColourVec4                   = {0.0, 0.0, 0.0, 0.0};

// Planet
float4 gPlanetPositionVec4				= {0.0,  0.0, 0.0, 0.0};
float4 gLightOriginVec4   = {0.0, 0.0, 0.0, 0.0}; 

// Lighting
float4 gMaterialParamsVec4              = {0.0, 1.0, 1.0, 0.0};

// Fog
float4 gSkyColourVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gHorizonColourVec4      = {1.0, 0.0, 1.0, 0.0};
float4 gSunColourVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gWaterColourBaseVec4    = {1.0, 0.0, 1.0, 0.0};
float4 gWaterColourAddVec4     = {1.0, 0.0, 1.0, 0.0};
float4 gWaterFogColourNearVec4 = {1.0, 0.0, 1.0, 0.0};
float4 gWaterFogColourFarVec4  = {1.0, 0.0, 1.0, 0.0};
float4 gWaterFogVec4           = {1.0, 0.0, 1.0, 0.0};
float4 gFogColourVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceHorizonColourVec4 = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogColourVec4    = {1.0, 0.0, 1.0, 0.0};
float4 gHeightFogParamsVec4    = {1.0, 0.0, 1.0, 0.0};
float4 gFogParamsVec4          = {1.0, 0.0, 1.0, 0.0};
float4 gScatteringParamsVec4   = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceFogParamsVec4     = {1.0, 0.0, 1.0, 0.0};
float4 gSpaceSkyColourVec4     = {1.0, 0.0, 1.0, 0.0};
float4 gSunPositionVec4        = {1.0, 0.0, 1.0, 0.0};


// Contexts

context FULLSCREEN
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader  = compile GLSL FS_FULLSCREEN;
    ComputeShader = compile GLSL FS_FULLSCREEN;
}

context FULLSCREEN_BELOW
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader  = compile GLSL FS_FULLSCREEN_B;
    ComputeShader = compile GLSL FS_FULLSCREEN_B;
}

context FULLSCREEN_FAST
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader = compile GLSL FS_FULLSCREEN_FAST;
    ComputeShader = compile GLSL FS_FULLSCREEN_FAST;
}

context FULLSCREEN_F_NOREF
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader = compile GLSL FS_FULLSCREEN_F_NOREF;
    ComputeShader = compile GLSL FS_FULLSCREEN_F_NOREF;
}

context FULLSCP3_F_NOREF
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader = compile GLSL FS_FULLSCP3_F_NOREF;
    ComputeShader = compile GLSL FS_FULLSCP3_F_NOREF;
}


context FULLSCP3LD_F_NOREF
{
    VertexShader = compile GLSL VS_FULLSCP3LD_F_NOREF;
    PixelShader = compile GLSL FS_FULLSCP3LD_F_NOREF;
    ComputeShader = compile GLSL FS_FULLSCP3LD_F_NOREF;
}

context FULLSCREEN_B_F
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader = compile GLSL FS_FULLSCREEN_B_F;
    ComputeShader = compile GLSL FS_FULLSCREEN_B_F;
}

context FULLSCREEN_B_F_NOREF
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader = compile GLSL FS_FULLSCREEN_B_F_NOREF;
    ComputeShader = compile GLSL FS_FULLSCREEN_B_F_NOREF;
}

context FULLSCREEN_B_NOREF
{
    VertexShader = compile GLSL VS_FSQUAD;
    PixelShader = compile GLSL FS_FULLSCREEN_B_NOREF;
    ComputeShader = compile GLSL FS_FULLSCREEN_B_NOREF;
}

//TF_BEGIN
context WATER_ABOVE_NOREF
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_WATER_ABOVE_NOREF;
	ComputeShader = compile GLSL FS_WATER_ABOVE_NOREF;
}

context WATER_BELOW_NOREF
{
	VertexShader = compile GLSL VS_FSQUAD;
	PixelShader = compile GLSL FS_WATER_BELOW_NOREF;
	ComputeShader = compile GLSL FS_WATER_BELOW_NOREF;
}
//TF_END

[[VS_FSQUAD]]
// =================================================================================================
#define D_TEX_QUAD
#define D_WATER
#include "ImmediateModeVertex.shader.h"

[[FS_FULLSCREEN]]
// =================================================================================================
#define D_FULLSCREEN
#define D_WATER
#define D_USE_REFLECTION_MAP
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_FULLSCREEN_B]]
// =================================================================================================
#define D_FULLSCREEN
#define D_FROM_BELOW
#define D_WATER
#define D_USE_REFLECTION_MAP
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_FULLSCREEN_FAST]]
// =================================================================================================
#define D_FULLSCREEN
#define D_WATER
#define D_USE_REFLECTION_MAP
#define D_FAST_NORMALS
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_FULLSCREEN_F_NOREF]]
// =================================================================================================
#define D_FULLSCREEN
#define D_WATER
#define D_FAST_NORMALS
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_FULLSCP3_F_NOREF]]
// =================================================================================================
#define D_FULLSCREEN
#define D_WATER
#define D_FAST_NORMALS
#define D_CONVERT_SRGB_P3
#include "Custom/WaterRaytraceFragment.shader.h"

[[VS_FULLSCP3LD_F_NOREF]]
// =================================================================================================
#define D_TEX_QUAD
#define D_WATER
#define D_WRITE_LINEARDEPTH
#include "ImmediateModeVertex.shader.h"

[[FS_FULLSCP3LD_F_NOREF]]
// =================================================================================================
#define D_FULLSCREEN
#define D_WATER
#define D_FAST_NORMALS
#define D_CONVERT_SRGB_P3
#define D_WRITE_LINEARDEPTH
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_FULLSCREEN_B_NOREF]]
// =================================================================================================
#define D_FULLSCREEN
#define D_FROM_BELOW
#define D_WATER
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_FULLSCREEN_B_F]]
// =================================================================================================
#define D_FULLSCREEN
#define D_FROM_BELOW
#define D_WATER
#define D_USE_REFLECTION_MAP
#define D_FAST_NORMALS
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_FULLSCREEN_B_F_NOREF]]
// =================================================================================================
#define D_FULLSCREEN
#define D_FROM_BELOW
#define D_WATER
#define D_FAST_NORMALS
#include "Custom/WaterRaytraceFragment.shader.h"

//TF_BEGIN
[[FS_WATER_ABOVE_NOREF]]
// =================================================================================================
#define D_FULLSCREEN
#define D_WATER
#define D_FAST_NORMALS
#define D_FORWARD
#include "Custom/WaterRaytraceFragment.shader.h"

[[FS_WATER_BELOW_NOREF]]
// =================================================================================================
#define D_FULLSCREEN
#define D_FROM_BELOW
#define D_WATER
#define D_FAST_NORMALS
#define D_FORWARD
#include "Custom/WaterRaytraceFragment.shader.h"
//TF_END